schema: 1
type: normalize
vendor-id: aws-config
id: aws-config-via-security-hub

filters:
  - match-type: all
    rules:
      - .detail and .detail.findings and (.detail.findings[].ProductFields.StandardsGuideArn or .detail.findings[].ProductFields.StandardsArn )

steps:
  - id: resource-info
    uses: SecurityHubResExtractor

  - id: getTags # SecurityHub findings for aws config rules doesn't not contain tags many a times so we have an action which takes care of that
    uses: GetTags
    with:
      - name: arn
        value: .steps."resource-info".arn #notice that when you want to refer to the output of a previous step, you refer to it via JQ expression .step as the previous steps output is available under the `step` JSON key
      - name: region
        value: .steps."resource-info".region

output:
  - name: vendorId
    value: aws-config
    value-type: STRING
  - name: alertId
    value: ."resource-info".alertId
  - name: vendorPolicy
    value: ."resource-info".policyId
  - name: csp
    value: ."resource-info".csp
  - name: resourceContainer
    value: ."resource-info".resourceContainer
  - name: region
    value: ."resource-info".region
  - name: service
    value: ."resource-info".service
  - name: resourceType
    value: ."resource-info".resourceType
  - name: resourceId
    value: ."resource-info".resourceId
  - name: tags
    value: ."getTags"

post-processor:
  steps:
    - id: update-security-hub-finding
      uses: SecurityHubUpdateFinding

#output queue is disabled because we use a post-processor. Output queue is used when we don't have a bi-directional integration with the vendor
output-queue:
  enabled: false
